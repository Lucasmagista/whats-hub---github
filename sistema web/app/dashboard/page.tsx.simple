"use client"

import { StatsCard } from "@/components/dashboard/stats-card"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { MessageSquare, Users, CheckCircle, Clock, TrendingUp, Activity, Bot, AlertCircle } from "lucide-react"
import { Suspense, useEffect, useState } from "react"

function LoadingSkeleton() {
  return (
    <div className="space-y-6">
      <div className="animate-pulse">
        <div className="h-8 bg-gray-200 rounded w-1/3 mb-4"></div>
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
          {[...Array(4)].map((_, i) => (
            <div key={i} className="h-32 bg-gray-200 rounded"></div>
          ))}
        </div>
      </div>
    </div>
  )
}

function DashboardContent() {
  const [mounted, setMounted] = useState(false)
  const [status, setStatus] = useState({
    isRunning: false,
    isConnected: false,
    messagesCount: 0,
    uptime: 0,
  })

  useEffect(() => {
    setMounted(true)
    
    // Simulate some data loading
    const timer = setTimeout(() => {
      setStatus({
        isRunning: true,
        isConnected: true,
        messagesCount: 42,
        uptime: 3600,
      })
    }, 1000)

    return () => clearTimeout(timer)
  }, [])

  if (!mounted) {
    return <LoadingSkeleton />
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight">Dashboard</h1>
          <p className="text-muted-foreground">
            VisÃ£o geral do seu bot do WhatsApp
          </p>
        </div>
        <div className="mt-4 sm:mt-0 flex items-center space-x-2">
          <Badge variant={status.isConnected ? "default" : "secondary"}>
            <Activity className="w-3 h-3 mr-1" />
            {status.isConnected ? "Conectado" : "Desconectado"}
          </Badge>
          <Badge variant={status.isRunning ? "default" : "destructive"}>
            <Bot className="w-3 h-3 mr-1" />
            {status.isRunning ? "Ativo" : "Inativo"}
          </Badge>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        <StatsCard
          title="Total de Mensagens"
          value={status.messagesCount.toString()}
          icon={MessageSquare}
        />
        <StatsCard
          title="Conversas Ativas"
          value="12"
          icon={Users}
        />
        <StatsCard
          title="Tickets Resolvidos"
          value="28"
          icon={CheckCircle}
        />
        <StatsCard
          title="Tempo de Atividade"
          value={`${Math.floor(status.uptime / 3600)}h`}
          icon={Clock}
        />
      </div>

      {/* Bot Status Card */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bot className="w-5 h-5" />
            Status do Bot
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid gap-4 md:grid-cols-2">
            <div className="space-y-2">
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Status:</span>
                <Badge variant={status.isRunning ? "default" : "destructive"}>
                  {status.isRunning ? "Ativo" : "Inativo"}
                </Badge>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">ConexÃ£o:</span>
                <Badge variant={status.isConnected ? "default" : "secondary"}>
                  {status.isConnected ? "Conectado" : "Desconectado"}
                </Badge>
              </div>
            </div>
            <div className="space-y-2">
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Mensagens Hoje:</span>
                <span className="font-medium">{status.messagesCount}</span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Uptime:</span>
                <span className="font-medium">{Math.floor(status.uptime / 3600)}h {Math.floor((status.uptime % 3600) / 60)}m</span>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Welcome Message */}
      <Card>
        <CardContent className="pt-6">
          <div className="text-center">
            <CheckCircle className="mx-auto h-12 w-12 text-green-500 mb-4" />
            <h2 className="text-2xl font-bold text-gray-900 mb-2">
              ðŸŽ‰ Bem-vindo ao Dashboard!
            </h2>
            <p className="text-gray-600 max-w-md mx-auto">
              Seu sistema estÃ¡ funcionando perfeitamente. VocÃª pode gerenciar seu bot do WhatsApp, 
              visualizar estatÃ­sticas e muito mais.
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

export default function DashboardPage() {
  return (
    <Suspense fallback={<LoadingSkeleton />}>
      <DashboardContent />
    </Suspense>
  )
}
